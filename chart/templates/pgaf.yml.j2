version: "3.8"

{% for postgres_node in postgres_nodes %}
x-postgres-volume-{{ postgres_node.name }}: &postgres-node-volume-{{ postgres_node.name }}
  {{ postgres_node.volume_config | default({}) }}
{% endfor %}

x-monitor-volume: &monitor-node-volume
  {{ monitor_node_volume_config | default({}) }}

services:

  monitor:
    image: {{ pgaf_swarm_image }}{{ pgaf_swarm_version }}
    command: monitor
    networks:
      pgaf:
        aliases:
          - "{{ monitor_node_hostname }}"
    environment:
      PGAF_SSL_MODE: verify-ca
      PGAF_HOSTNAME: "{{ monitor_node_hostname }}"
      PGAF_NAME: "{{ monitor_node_hostname }}"
      PGAF_monitor_node_hostname: "{{ monitor_node_hostname }}"
      PGDATA: "{{ monitor_node_pgdata | default('/var/lib/postgresql/data') }}"
    deploy:    
      placement:
        {{ monitor_node_placement | default({}) }}
    configs:
      - source: pg_hba_monitor
        target: /etc/pgaf/pg_hba.conf
        uid: '999'
        gid: '999'
        mode: 0600
      - source: pg_ident_monitor
        target: /etc/pgaf/pg_ident.conf
        uid: '999'
        gid: '999'
        mode: 0600
      - source: postgresql_monitor_custom
        target: /etc/pgaf/postgresql.custom.conf
        uid: '999'
        gid: '999'
        mode: 0600
    secrets:
      - source: monitor_ssl_ca
        target: ssl_ca
        uid: '999'
        gid: '999'
        mode: 0600
      - source: monitor_ssl_cert
        target: ssl_cert
        uid: '999'
        gid: '999'
        mode: 0600
      - source: monitor_ssl_key
        target: ssl_key
        uid: '999'
        gid: '999'
        mode: 0600
    volumes:
      - "monitor:{{ monitor_node_volume_mount }}"

{% for postgres_node in postgres_nodes %}
  {{ postgres_node.name }}:
    image: {{ pgaf_swarm_image }}{{ pgaf_swarm_version }}
    command: db-server
    networks:
      pgaf:
        aliases:
          - {{ postgres_node.hostname }}
    environment:
      PGAF_SSL_MODE: verify-ca
      PGAF_HOSTNAME: {{ postgres_node.hostname }}
      PGAF_NAME: {{ postgres_node.hostname }}
      PGAF_monitor_node_hostname: "{{ monitor_node_hostname }}"
      PGDATA: "{{ postgres_node.pgdata | default('/var/lib/postgresql/data') }}"
    deploy:    
      placement:
        {{ postgres_node.placement | default({}) }}
    configs:
      - source: pg_hba_node
        target: /etc/pgaf/pg_hba.conf
        uid: '999'
        gid: '999'
        mode: 0600
      - source: pg_ident_node
        target: /etc/pgaf/pg_ident.conf
        uid: '999'
        gid: '999'
        mode: 0600
      - source: postgresql_node_custom
        target: /etc/pgaf/postgresql.custom.conf
        uid: '999'
        gid: '999'
        mode: 0600
    secrets:
      - source: postgres_ssl_ca
        target: ssl_ca
        uid: '999'
        gid: '999'
        mode: 0600
      - source: postgres_ssl_cert
        target: ssl_cert
        uid: '999'
        gid: '999'
        mode: 0600
      - source: postgres_ssl_key
        target: ssl_key
        uid: '999'
        gid: '999'
        mode: 0600
    volumes:
      - "vol_{{ postgres_node.name }}:{{ postgres_node.volume_mount | default('/var/lib/postgresql') }}"
{% endfor %}

  admin:
    image: {{ pgaf_swarm_image }}{{ pgaf_swarm_version }}
    entrypoint: /bin/bash -c 'tail -f /dev/null'
    command: []
    environment:
      PGAF_NODE_LIST: >
{% for postgres_node in postgres_nodes %}
        {{ postgres_node.hostname }}
{% endfor %}
    networks:
      pgaf:
    secrets:
      - source: admin_ssl_ca
        target: ssl_ca
        uid: '999'
        gid: '999'
        mode: 0600
      - source: admin_ssl_cert
        target: ssl_cert
        uid: '999'
        gid: '999'
        mode: 0600
      - source: admin_ssl_key
        target: ssl_key
        uid: '999'
        gid: '999'
        mode: 0600

configs:
  pg_hba_monitor:
    file: ./configs/monitor/pg_hba.conf
  postgresql_monitor_custom:
    file: ./configs/monitor/postgresql.custom.conf
  pg_ident_monitor:
    file: ./configs/monitor/pg_ident.conf

  pg_hba_node:
    file: ./configs/node/pg_hba.conf
  postgresql_node_custom:
    file: ./configs/node/postgresql.custom.conf
  pg_ident_node:
    file: ./configs/node/pg_ident.conf


secrets:
  monitor_ssl_ca:
    file: ./certs/monitor/postgres_server/rootCA-verification.pem
  monitor_ssl_cert:
    file: ./certs/monitor/postgres_server/server.crt
  monitor_ssl_key:
    file: ./certs/monitor/postgres_server/server.key

  postgres_ssl_ca:
    file: ./certs/postgres/postgres_server/rootCA-verification.pem
  postgres_ssl_cert:
    file: ./certs/postgres/postgres_server/server.crt
  postgres_ssl_key:
    file: ./certs/postgres/postgres_server/server.key

  admin_ssl_ca:
    file: ./certs/admin/postgres_server/rootCA-verification.pem
  admin_ssl_cert:
    file: ./certs/admin/postgres_server/server.crt
  admin_ssl_key:
    file: ./certs/admin/postgres_server/server.key

networks:
  pgaf:
    attachable: true
    driver: overlay
    driver_opts:
      encrypted: ""
      com.docker.network.driver.mtu: "1350"

volumes:
{% for postgres_node in postgres_nodes %}
  vol_{{ postgres_node.name }}:
    # for any overrides we also merge the node specific config
    <<: *postgres-node-volume-{{ postgres_node.name }}
{% endfor %}
  monitor:
    <<: *monitor-node-volume
