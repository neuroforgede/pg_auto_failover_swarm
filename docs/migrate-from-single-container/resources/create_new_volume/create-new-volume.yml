version: '3.8'

services:
  initialize:
    # we use the same image, no need to download more
    image: ghcr.io/neuroforgede/pgaf-swarm:0.1.7-15
    environment:
      POSTGRES_ADMIN_USER: "mypguser"
    # FIXME: add this script to the actual pgaf-swarm Dockerfile. This is useful
    entrypoint:
    - /bin/bash
    - -c
    - |
      docker_temp_server_start() {
        if [ "$$1" = 'postgres' ]; then
          shift
        fi

        # internal start of server in order to allow setup using psql client
        # does not listen on external TCP/IP and waits until start finishes
        set -- "$$@" -c listen_addresses='' -p "$${PGPORT:-5432}"

        PGUSER="$${PGUSER:-$$POSTGRES_USER}" \
        sudo -u postgres /usr/lib/postgresql/15/bin/pg_ctl -D "/var/lib/postgresql/data" \
          -o "$$(printf '%q ' "$$@")" \
          -w start
      }

      # stop postgresql server after done setting up user and running scripts
      docker_temp_server_stop() {
        PGUSER="$${PGUSER:-postgres}" \
        sudo -u postgres /usr/lib/postgresql/15/bin/pg_ctl -D "/var/lib/postgresql/data" -m fast -w stop
      }

      if [ -d /var/lib/postgresql/data ]; then
        # the directory exists
        if [ "$$(ls -A /var/lib/postgresql/data)" ]; then
          echo "/var/lib/postgresql/data is not empty, will not run migration..."
          exit 1
        fi
      else
        mkdir -p /var/lib/postgresql/data  
      fi
      chown -R 999:999 /var/lib/postgresql
      cp -a -T /original_volume/ /var/lib/postgresql/data
      ls -la /var/lib/postgresql/data

      docker_temp_server_start

      # check if postgres user already exists
      sudo -u postgres psql -U postgres template1 -c "SELECT 1" || sudo -u postgres createuser --superuser -U "$$POSTGRES_ADMIN_USER" postgres
      sudo -u postgres psql -U postgres template1 -c "SELECT 1" || exit 1

      docker_temp_server_stop
    volumes:
      - original_volume:/original_volume
      - new_volume:/var/lib/postgresql
    deploy:
      restart_policy:
        condition: none

volumes:
  original_volume:
    name: "my_postgres_data"
  # the new volume name
  # if we name it properly here, we do not have to customize this logic later
  # <stack_name>_vol_<node_name>
  new_volume:
    name: "pgaf_test_vol_node_1"
